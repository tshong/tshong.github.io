"use strict";(self.webpackChunkchamp_book=self.webpackChunkchamp_book||[]).push([[123],{557:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-32ed26cf",path:"/guide/tutorial.html",title:"入門教程",lang:"zh-TW",frontmatter:{lang:"zh-TW",title:"入門教程",description:"感受後台的自動化"},excerpt:"",headers:[{level:2,title:"後台驗證",slug:"後台驗證",children:[]},{level:2,title:"輸入元件",slug:"輸入元件",children:[]},{level:2,title:"記錄增修資訊",slug:"記錄增修資訊",children:[]},{level:2,title:"DB自動增加欄位",slug:"db自動增加欄位",children:[]}],filePathRelative:"guide/tutorial.md",git:{updatedTime:1638969212e3,contributors:[{name:"I20496鄧世雄",email:"saihong@icsc.com.tw",commits:2}]}}},55:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var t=a(252);const p=(0,t.uE)('<h2 id="後台驗證" tabindex="-1"><a class="header-anchor" href="#後台驗證" aria-hidden="true">#</a> 後台驗證</h2><p>目前畫面的所有欄位都是自由輸入，實務上使用者輸入的內容，系統都要進一步驗證，而有鑑於資料的安全性，所有資料除了前台防呆以外，後台必須再做一次驗證，才能確保送到系統的資料是<strong>安全</strong>與<strong>正確</strong>。</p><p>假設下述的欄位中，第 9 行的 <em>isFromDU</em> 只允許輸入 <code>0</code> 或 <code>1</code> ，過去，我們必須在 controller 的 validate 中加入這一段防呆檢查。現在，我們只須在這裡補充一段設定即可。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default </span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;      \norgType     String   y   組織類別      10   String      &quot;&quot;      \ndepNo       String   y   部門代號      30   String    &quot;&quot;      \ndepName     String   n   部門名稱      200  String    &quot;&quot;      \nstatus      String   n   狀態          2    String    &quot;&quot;      \nisFromDU    String   n   是否來自DU    1    String     &quot;&quot;       \n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>設定如下，在預設值的後面，加上正則表達式 <code>/[01]/</code> 來限定輸入值只能是 0 或 1 :</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default </span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;      \n<span class="token punctuation">...</span>略   \nisFromDU    String   n   是否來自DU    1    String     &quot;&quot;   /<span class="token punctuation">[</span><span class="token number">01</span><span class="token punctuation">]</span>/\n</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>重新啟動 spring boot，進入畫面，與「是否來自DU」欄位中輸入 <code>3</code>, 後台會自動按照所定義的規則驗證，效果如下圖。</p><p><img src="https://i.imgur.com/hmfmFbh.png" alt="Alt text" title="Optional title"></p>',8),e=(0,t.Uk)("正則表達式的功能強大， "),i={href:"https://5xruby.tw/posts/15min-regular-expression",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("十五分鐘認識正規表達式"),o=(0,t.Uk)(" 可快速帶你過一遍"),l=(0,t.uE)('<h2 id="輸入元件" tabindex="-1"><a class="header-anchor" href="#輸入元件" aria-hidden="true">#</a> 輸入元件</h2><p>雖然我們可以在後台為資料做最後把關，但開個文字輸入欄位給使用者，就是一個很大的陷阱，既然限定了 0 或 1，採用下拉選單或語會更好。 我們把 isFromDU 的 format 改成 <code>code</code>，驗證規則改成 <code>[0,1]</code>，存檔。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default </span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;      \n<span class="token punctuation">...</span>略   \nisFromDU    String   n   是否來自DU    1    code     &quot;&quot;   <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="改成下拉選單" tabindex="-1"><a class="header-anchor" href="#改成下拉選單" aria-hidden="true">#</a> 改成下拉選單</h4><p>存檔就好，不必執行任何指令，背後 <code>EZoCode</code> 會自動幫你寫好程式, 再刷新畫面，你會發現輸入欄位已變成<strong>下拉選單</strong>。</p><p><img src="https://i.imgur.com/rQVRY8J.png" alt="Alt text" title="Optional title"></p><h4 id="下拉選項加入中文" tabindex="-1"><a class="header-anchor" href="#下拉選項加入中文" aria-hidden="true">#</a> 下拉選項加入中文</h4><p>當然 0, 1 對使用者而言是沒有意義的，要加上中文說明，可以改成:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default </span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;      \n<span class="token punctuation">...</span>略   \nisFromDU    String   n   是否來自DU    1    code     &quot;&quot;   <span class="token punctuation">[</span>0<span class="token punctuation">-</span>否<span class="token punctuation">,</span>1<span class="token punctuation">-</span>是<span class="token punctuation">]</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>這樣就完成了將<strong>文字輸入框</strong>變成<strong>下拉選單</strong>。</p><p><img src="https://i.imgur.com/VDzLVPD.png" alt="Alt text" title="Optional title"></p><h4 id="換成-radio-box" tabindex="-1"><a class="header-anchor" href="#換成-radio-box" aria-hidden="true">#</a> 換成 radio box</h4><p>一般若只有很少的選項，用操作步驟更少的 radio box 取代下拉選單的體驗會更好。</p><p>請加入以下的 Line 9-12 內容，要注意的是 widget 一欄我們用 <strong>radio</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>#Field\n#name   Type    isKey?  description  width   format    default\n--------------------------------------------------------------------------------------\ncompId      String   y   公司ID        30   String    &quot;&quot;\n....略\nisFromDU    String   n   是否來自DU    1    code     &quot;&quot;    [0-否,1-是]\n\n#UI\n#name 顯示名稱    widget    inList     multiEdit\n-----------------------------------------------------------------------------------------------------------------------\nisFromDU  *    radio      n        n\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>是否來自DU</strong> 立馬變成 radio <img src="https://i.imgur.com/Ljd9vhm.png" alt="Alt text" title="Optional title"></p><h4 id="改變欄位名稱" tabindex="-1"><a class="header-anchor" href="#改變欄位名稱" aria-hidden="true">#</a> 改變欄位名稱</h4><p>EZoCode 預設會用 table schema 的欄位中文作為畫面欄位名稱，但某些畫面欄位名稱有特殊業務意義，必須應客戶需求而調整，這時可以在 #UI 的區域中加工，例如客戶想把<strong>是否來自DU</strong> 改成 <strong>與人事同步</strong>，修改如下 Line 11:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>#Field\n#name   Type    isKey?  description  width   format    default\n----------------------------------------------------------------\ncompId      String   y   公司ID        30   String    &quot;&quot;\n....略\nisFromDU    String   n   是否來自DU    1    code     &quot;&quot;    [0-否,1-是]\n\n#UI\n#name 顯示名稱    widget    inList     multiEdit\n-----------------------------------------------------\nisFromDU  與人事同步    radio      n        n\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>修改後的效果:</p><p><img src="https://i.imgur.com/a34GxZ6.png" alt="Alt text" title="Optional title"></p><h2 id="記錄增修資訊" tabindex="-1"><a class="header-anchor" href="#記錄增修資訊" aria-hidden="true">#</a> 記錄增修資訊</h2><p>公司稽核對應用系統的的資料追蹤有一定要求，常見的是對重要的主數據必須記錄資料的異動人員、日期、時間，合規的ERP幾乎都須要滿足這點要求。開發人員為此要在所有的資料維護作業中，在新增、修改時處理這六個欄位，這種編程並非核心邏輯，但礙於規範要求，又不得不做。</p><p>瑣碎的工作交給 EZoChamp 就對了，接著我們會說明怎麼只用簡短的設定來完成這件工作。</p><p>目前為保留彈性， EZoChamp 未規定<strong>異動資訊</strong>欄位的命名規則，只須在<strong>format</strong>欄位標記以下 6 個關鍵字:</p><ul><li>createUser 新增人員</li><li>createDate 新增日期</li><li>createTime 新增時間</li><li>updateUser 修改人員</li><li>updateDate 修改日期</li><li>updateTime 修改時間</li></ul><p>之後的預設值或資料驗證規則不必填寫。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>\n<span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default</span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;\n<span class="token punctuation">...</span>略\nisFromDU    String   n   是否來自DU    1    code     &quot;&quot;    <span class="token punctuation">[</span>0<span class="token punctuation">-</span>否<span class="token punctuation">,</span>1<span class="token punctuation">-</span>是<span class="token punctuation">]</span>\ncreEmpl     String    N   建立人員    10    createUser\ncreDate     String    N   建立日期    8     createDate\ncreTime     String    N   建立時間    10    createTime\nupdEmpl     String    N   更新人員    6     updateUser\nupdDate     String    N   更新日期    8     updateDate\nupdTime     String    N   更新時間    6     updateTime\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>畫面多了 6 個欄位，系統知道這些欄位的屬性，所以把欄位設成唯讀了。</p><p><img src="https://i.imgur.com/A2GeexD.png" alt="Alt text" title="Optional title"></p><p>接著我們試著修改一筆資料，記得要真的要有改資料，不要只按【儲存】鈕, 可以看到 EZoChamp 已經自動記錄<strong>修改人員與時間</strong>了。</p><p><img src="https://i.imgur.com/ubjxhjD.png" alt="Alt text" title="Optional title"></p><p>再試著新增一筆資料，一樣，底層自動記錄了<strong>新增人員與時間</strong>的資訊。</p><p><img src="https://i.imgur.com/yRINiny.png" alt="Alt text" title="Optional title"></p><div class="custom-container warning"><p class="custom-container-title">異動記錄的時機</p><p>新增、修改的資訊記錄，並不是寫在 controller 層，而是寫在 DB 儲存層，這代表就算是透過 web service 或定時啟動的程式的異動，一樣會被記錄下來。</p></div><h2 id="db自動增加欄位" tabindex="-1"><a class="header-anchor" href="#db自動增加欄位" aria-hidden="true">#</a> DB自動增加欄位</h2><p>有沒有發現至目前為止，我們只須要在 dao 檔加入欄位，背後的 table schema 異動也在不知不覺中自己完成了，這都是拜我們採用的 JPA 儲存框架所賜。 當 spring boot 重新啟動，他會掃描所有與 DB 資料表連結的 VO 程式，若發現 VO 有多出欄位，就會自行產生 alter table add column 的指令，並且直接執行，這樣可以省掉開發工程師大量的瑣碎時間。</p><p>當然這種便利僅限於開發環境，正式環境我們會關閉這項 table schema 自動同步功能，仍維持由 DBA 檢核後再以正式程序執行異動，以確保正式環境 DB 的穩定性。</p>',38),u={},r=(0,a(744).Z)(u,[["render",function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("p",null,[e,(0,t._)("a",i,[c,(0,t.Wm)(a)]),o]),l],64)}]])},744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);