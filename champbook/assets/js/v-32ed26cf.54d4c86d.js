"use strict";(self.webpackChunkchamp_book=self.webpackChunkchamp_book||[]).push([[123],{557:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-32ed26cf",path:"/guide/tutorial.html",title:"入門教程",lang:"zh-TW",frontmatter:{lang:"zh-TW",title:"入門教程",description:"感受後台的自動化"},excerpt:"",headers:[{level:2,title:"後台驗證",slug:"後台驗證",children:[]},{level:2,title:"輸入元件",slug:"輸入元件",children:[]},{level:2,title:"記錄增修資訊",slug:"記錄增修資訊",children:[]},{level:2,title:"DB自動增加欄位",slug:"db自動增加欄位",children:[]},{level:2,title:"動態下拉選項",slug:"動態下拉選項",children:[]},{level:2,title:"提示輸入視窗",slug:"提示輸入視窗",children:[]},{level:2,title:"前端互動",slug:"前端互動",children:[]},{level:2,title:"後端防呆",slug:"後端防呆",children:[]},{level:2,title:"後端控制前端",slug:"後端控制前端",children:[]}],filePathRelative:"guide/tutorial.md",git:{updatedTime:1638969212e3,contributors:[{name:"I20496鄧世雄",email:"saihong@icsc.com.tw",commits:2}]}}},401:(n,s,a)=>{a.r(s),a.d(s,{default:()=>y});var p=a(252);const t=(0,p.uE)('<h2 id="後台驗證" tabindex="-1"><a class="header-anchor" href="#後台驗證" aria-hidden="true">#</a> 後台驗證</h2><p>目前畫面的所有欄位都是自由輸入，實務上使用者輸入的內容，系統都要進一步驗證，而有鑑於資料的安全性，所有資料除了前台防呆以外，後台必須再做一次驗證，才能確保送到系統的資料是<strong>安全</strong>與<strong>正確</strong>。</p><p>假設下述的欄位中，第 9 行的 <em>isFromDU</em> 只允許輸入 <code>0</code> 或 <code>1</code> ，過去，我們必須在 controller 的 validate 中加入這一段防呆檢查。現在，我們只須在這裡補充一段設定即可。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default </span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;      \norgType     String   y   組織類別      10   String      &quot;&quot;      \ndepNo       String   y   部門代號      30   String    &quot;&quot;      \ndepName     String   n   部門名稱      200  String    &quot;&quot;      \nstatus      String   n   狀態          2    String    &quot;&quot;      \nisFromDU    String   n   是否來自DU    1    String     &quot;&quot;       \n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>設定如下，在預設值的後面，加上正則表達式 <code>/[01]/</code> 來限定輸入值只能是 0 或 1 :</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default </span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;      \n<span class="token punctuation">...</span>略   \nisFromDU    String   n   是否來自DU    1    String     &quot;&quot;   /<span class="token punctuation">[</span><span class="token number">01</span><span class="token punctuation">]</span>/\n</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>重新啟動 spring boot，進入畫面，與「是否來自DU」欄位中輸入 <code>3</code>, 後台會自動按照所定義的規則驗證，效果如下圖。</p><p><img src="https://i.imgur.com/hmfmFbh.png" alt="Alt text" title="Optional title"></p>',8),e=(0,p.Uk)("正則表達式的功能強大， "),c={href:"https://5xruby.tw/posts/15min-regular-expression",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("十五分鐘認識正規表達式"),l=(0,p.Uk)(" 可快速帶你過一遍"),i=(0,p.uE)('<h2 id="輸入元件" tabindex="-1"><a class="header-anchor" href="#輸入元件" aria-hidden="true">#</a> 輸入元件</h2><p>雖然我們可以在後台為資料做最後把關，但開個文字輸入欄位給使用者，就是一個很大的陷阱，既然限定了 0 或 1，採用下拉選單或語會更好。 我們把 isFromDU 的 format 改成 <code>code</code>，驗證規則改成 <code>[0,1]</code>，存檔。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default </span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;      \n<span class="token punctuation">...</span>略   \nisFromDU    String   n   是否來自DU    1    code     &quot;&quot;   <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="改成下拉選單" tabindex="-1"><a class="header-anchor" href="#改成下拉選單" aria-hidden="true">#</a> 改成下拉選單</h4><p>存檔就好，不必執行任何指令，背後 <code>EZoCode</code> 會自動幫你寫好程式, 再刷新畫面，你會發現輸入欄位已變成<strong>下拉選單</strong>。</p><p><img src="https://i.imgur.com/rQVRY8J.png" alt="Alt text" title="Optional title"></p><h4 id="下拉選項加入中文" tabindex="-1"><a class="header-anchor" href="#下拉選項加入中文" aria-hidden="true">#</a> 下拉選項加入中文</h4><p>當然 0, 1 對使用者而言是沒有意義的，要加上中文說明，可以改成:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default </span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;      \n<span class="token punctuation">...</span>略   \nisFromDU    String   n   是否來自DU    1    code     &quot;&quot;   <span class="token punctuation">[</span>0<span class="token punctuation">-</span>否<span class="token punctuation">,</span>1<span class="token punctuation">-</span>是<span class="token punctuation">]</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>這樣就完成了將<strong>文字輸入框</strong>變成<strong>下拉選單</strong>。</p><p><img src="https://i.imgur.com/VDzLVPD.png" alt="Alt text" title="Optional title"></p><h4 id="換成-radio-box" tabindex="-1"><a class="header-anchor" href="#換成-radio-box" aria-hidden="true">#</a> 換成 radio box</h4><p>一般若只有很少的選項，用操作步驟更少的 radio box 取代下拉選單的體驗會更好。</p><p>請加入以下的 Line 9-12 內容，要注意的是 widget 一欄我們用 <strong>radio</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>#Field\n#name   Type    isKey?  description  width   format    default\n--------------------------------------------------------------------------------------\ncompId      String   y   公司ID        30   String    &quot;&quot;\n....略\nisFromDU    String   n   是否來自DU    1    code     &quot;&quot;    [0-否,1-是]\n\n#UI\n#name 顯示名稱    widget    inList     multiEdit\n-----------------------------------------------------------------------------------------------------------------------\nisFromDU  *    radio      n        n\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>是否來自DU</strong> 立馬變成 radio <img src="https://i.imgur.com/Ljd9vhm.png" alt="Alt text" title="Optional title"></p><h4 id="改變欄位名稱" tabindex="-1"><a class="header-anchor" href="#改變欄位名稱" aria-hidden="true">#</a> 改變欄位名稱</h4><p>EZoCode 預設會用 table schema 的欄位中文作為畫面欄位名稱，但某些畫面欄位名稱有特殊業務意義，必須應客戶需求而調整，這時可以在 #UI 的區域中加工，例如客戶想把<strong>是否來自DU</strong> 改成 <strong>與人事同步</strong>，修改如下 Line 11:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>#Field\n#name   Type    isKey?  description  width   format    default\n----------------------------------------------------------------\ncompId      String   y   公司ID        30   String    &quot;&quot;\n....略\nisFromDU    String   n   是否來自DU    1    code     &quot;&quot;    [0-否,1-是]\n\n#UI\n#name 顯示名稱    widget    inList     multiEdit\n-----------------------------------------------------\nisFromDU  與人事同步    radio      n        n\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>修改後的效果:</p><p><img src="https://i.imgur.com/a34GxZ6.png" alt="Alt text" title="Optional title"></p><h2 id="記錄增修資訊" tabindex="-1"><a class="header-anchor" href="#記錄增修資訊" aria-hidden="true">#</a> 記錄增修資訊</h2><p>公司稽核對應用系統的的資料追蹤有一定要求，常見的是對重要的主數據必須記錄資料的異動人員、日期、時間，合規的ERP幾乎都須要滿足這點要求。開發人員為此要在所有的資料維護作業中，在新增、修改時處理這六個欄位，這種編程並非核心邏輯，但礙於規範要求，又不得不做。</p><p>瑣碎的工作交給 EZoChamp 就對了，接著我們會說明怎麼只用簡短的設定來完成這件工作。</p><p>目前為保留彈性， EZoChamp 未規定<strong>異動資訊</strong>欄位的命名規則，只須在<strong>format</strong>欄位標記以下 6 個關鍵字:</p><ul><li>createUser 新增人員</li><li>createDate 新增日期</li><li>createTime 新增時間</li><li>updateUser 修改人員</li><li>updateDate 修改日期</li><li>updateTime 修改時間</li></ul><p>之後的預設值或資料驗證規則不必填寫。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>\n<span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default</span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;\n<span class="token punctuation">...</span>略\nisFromDU    String   n   是否來自DU    1    code     &quot;&quot;    <span class="token punctuation">[</span>0<span class="token punctuation">-</span>否<span class="token punctuation">,</span>1<span class="token punctuation">-</span>是<span class="token punctuation">]</span>\ncreEmpl     String    N   建立人員    10    createUser\ncreDate     String    N   建立日期    8     createDate\ncreTime     String    N   建立時間    10    createTime\nupdEmpl     String    N   更新人員    6     updateUser\nupdDate     String    N   更新日期    8     updateDate\nupdTime     String    N   更新時間    6     updateTime\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>畫面多了 6 個欄位，系統知道這些欄位的屬性，所以把欄位設成唯讀了。</p><p><img src="https://i.imgur.com/A2GeexD.png" alt="Alt text" title="Optional title"></p><p>接著我們試著修改一筆資料，記得要真的要有改資料，不要只按【儲存】鈕, 可以看到 EZoChamp 已經自動記錄<strong>修改人員與時間</strong>了。</p><p><img src="https://i.imgur.com/ubjxhjD.png" alt="Alt text" title="Optional title"></p><p>再試著新增一筆資料，一樣，底層自動記錄了<strong>新增人員與時間</strong>的資訊。</p><p><img src="https://i.imgur.com/yRINiny.png" alt="Alt text" title="Optional title"></p><div class="custom-container warning"><p class="custom-container-title">異動記錄的時機</p><p>新增、修改的資訊記錄，並不是寫在 controller 層，而是寫在 DB 儲存層，這代表就算是透過 web service 或定時啟動的程式的異動，一樣會被記錄下來。</p></div><h2 id="db自動增加欄位" tabindex="-1"><a class="header-anchor" href="#db自動增加欄位" aria-hidden="true">#</a> DB自動增加欄位</h2><p>有沒有發現至目前為止，我們只須要在 dao 檔加入欄位，背後的 table schema 異動也在不知不覺中自己完成了，這都是拜我們採用的 JPA 儲存框架所賜。 當 spring boot 重新啟動，他會掃描所有與 DB 資料表連結的 VO 程式，若發現 VO 有多出欄位，就會自行產生 alter table add column 的指令，並且直接執行，這樣可以省掉開發工程師大量的瑣碎時間。</p><p>當然這種便利僅限於開發環境，正式環境我們會關閉這項 table schema 自動同步功能，仍維持由 DBA 檢核後再以正式程序執行異動，以確保正式環境 DB 的穩定性。</p><h2 id="動態下拉選項" tabindex="-1"><a class="header-anchor" href="#動態下拉選項" aria-hidden="true">#</a> 動態下拉選項</h2><p>以前面的部門基本資料為例，組織型態是文字輸入，接著我們的案例是: 輸入內容來自另一張資料表，並限定在下拉選單。</p><p><strong>新增資料表</strong></p><p>這次除了一般欄位，我們增加了下拉選單的定義，下拉選單只需要 select 兩個欄位，第 1 個欄位是 value，第 2 個欄位是 label。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#Meta</span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span>\n<span class="token key atrule">package</span>  <span class="token punctuation">:</span>  com.icsc.xx.i20496.dao\n<span class="token key atrule">table</span>    <span class="token punctuation">:</span>  db.tbxx06i20496\n<span class="token key atrule">descript</span> <span class="token punctuation">:</span>  組織類別維護\n<span class="token key atrule">alias</span>    <span class="token punctuation">:</span>  組織類別\n<span class="token key atrule">project</span>  <span class="token punctuation">:</span>  使用者管理系統\n<span class="token key atrule">entity</span>   <span class="token punctuation">:</span>  xxTb06i20496VO\n<span class="token key atrule">genView</span>  <span class="token punctuation">:</span>  Y\n\n<span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default</span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\norgType     String   y   組織類別代號      10   String      &quot;&quot;\norgName     String   n   組織類別名稱      10   String      &quot;&quot;\n\n<span class="token comment">#Select</span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\n<span class="token key atrule">orgType</span><span class="token punctuation">:</span> v.orgType<span class="token punctuation">,</span> v.orgName from xxTb06i20496VO v\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>Line 19: 產生下拉選項的類sql，資料表名稱改用 vo 名稱，冒號前面是 select name (上述的 orgType)。</p><p>寫完後存檔，記得檔案放在 xx/$工號/dao/ 目錄下，背後的 ezocode 會自動幫你寫好程式。</p><p>在不到 3 分鐘，我們完成了下述的基本資料維護作業，新增個 3 筆測試資料。</p><p><img src="https://i.imgur.com/7jO92vQ.png" alt="Alt text" title="Optional title"></p><p><strong>動態下拉</strong></p><p>回到上一個 dao，在 Line 5 中，把 format 改成 <code>select</code>， <code>validation</code> 設成下拉選單的代號。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default   validation</span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;\norgType     String   y   組織類別      10   select      &quot;&quot;     xx.i20496.orgType\ndepNo       String   y   部門代號      30   String    &quot;&quot;\ndepName     String   n   部門名稱      200  String    &quot;&quot;\n<span class="token punctuation">...</span>略\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">下拉選單代號</p><p>$sysId.$moduleId.$selectName，如: xx.i20496.orgType</p></div><p>修改-&gt;存檔，刷新畫面後可看到效果。</p><p><img src="https://i.imgur.com/tdyyy0U.png" alt="Alt text" title="Optional title"></p><h2 id="提示輸入視窗" tabindex="-1"><a class="header-anchor" href="#提示輸入視窗" aria-hidden="true">#</a> 提示輸入視窗</h2><p>當資料量很多(如:使用者工號)時，就要考慮改用提示輸入視窗，做法如同上述下拉選單，在原資料表中增加一個設定，使用方的 dao 檔的欄位 format 做調整，validation 填入對應的代號即可完成。</p><p>原基本資料表中，加入 #Picker 內容，冒號前面是 picker 名稱，將出現在彈跳視窗的 title，冒號後面是 picker 列表的資料來源 sql，可以 select 多個欄位，別名為 column header。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>\n<span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default</span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\norgType     String   y   組織類別代號      10   String      &quot;&quot;\norgName     String   n   組織類別名稱      10   String      &quot;&quot;\n\n<span class="token comment">#Select</span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\n<span class="token key atrule">orgType</span><span class="token punctuation">:</span> v.orgType<span class="token punctuation">,</span> v.orgName from xxTb06i20496VO v\n\n<span class="token comment">#Picker</span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\n<span class="token key atrule">組織型態</span><span class="token punctuation">:</span> select a.orgType as 組織代號<span class="token punctuation">,</span> a.orgName as 組織名稱 from db.tbxx06i20496 a\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>回到使用方的 dao，format 改成 <code>picker</code>，<code>validation</code> 指定 picker 代號</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#Field</span>\n<span class="token comment">#name   Type    isKey?  description  width   format    default  validation</span>\n<span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>\ncompId      String   y   公司ID        30   String    &quot;&quot;\norgType     String   y   組織類別      10   picker      &quot;&quot;     xx.i20496.tb06i20496\ndepNo       String   y   部門代號      30   String    &quot;&quot;\n<span class="token punctuation">...</span>略\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">提示輸入視窗代號</p><p>$sysId.$moduleId.$pickerName 如: xx.i20496.tb06i20496<br> pickerName 為 參考資料表的 VO 去掉系統別與 VO<br> xxTb06i20496VO =&gt; tb06i20496</p></div><p>打開「部門基本資料維護」，效果如下: <img src="https://i.imgur.com/NYLVqBi.png" alt="Alt text" title="Optional title"></p><p><strong>自動防呆</strong> 過去我們的提示輸入欄位，因為怕使用者自由輸入不合法的資料 (例如:工號欄位，輸入一個不存在的工號)，說後台又不想花功夫去防呆，省事起見，就把欄位設成唯讀。然而有時使用者已經對代號很熟，直接輸入遠比從視窗挑來的快，這樣設計反而讓使用體驗變差。</p><p>如今，ezochamp 幫你生出來的 picker，其背後的存在邏輯，ezochamp 也非常清楚。所以從現在起，可以放膽讓使用者自己輸入，因為後台還有一道防線會幫你把關。下圖中，我們輸入了一個不存在的「組織類別」 <code>admin</code>，在不必寫任何程式下，後台自動幫你擋下。</p><p><img src="https://i.imgur.com/QypQKA5.png" alt="Alt text" title="Optional title"></p><h2 id="前端互動" tabindex="-1"><a class="header-anchor" href="#前端互動" aria-hidden="true">#</a> 前端互動</h2><p>前端需要依使用者的輸入內容而動態變化時 (如:按鈕 disabled，欄位唯讀、隱藏…)，過去要寫不少 javascript，且容易寫出不能跨瀏覽器的語法。</p><p>如今，跨瀏覽器、跨裝置已經是基本配備，我們甚至不想被<code>前端框架</code>(angular,vue,react..)所束縛，所以我們採取最本質的做法，只控制 data model，不操作瀏覽器相關 API，也不操作任何框架的 API。</p><p>以「部門資料維護」為例，假設「與人事同步」選項設為「是」，資料不能被編輯，當設回「否」時，資料又可被編輯，這是純前端的控制。我們開啟畫面描述語言檔 pug (捨棄括弧，以類似 python 縮排表示巢狀)，如: xxTb05i20496.pug，<code>i20496</code> 請換成自己的工號。</p>',68),u=(0,p.Uk)("ezochamp 讀取 "),r={href:"https://pugjs.org/api/getting-started.html",target:"_blank",rel:"noopener noreferrer"},k=(0,p.Uk)("pug"),b=(0,p.Uk)(" 檔轉換成對應的前端程式，內容稍後再補充，先看我們的需求，「與人事同步」欄位 change 時，要對所有欄位設成"),m=(0,p._)("code",null,"唯讀",-1),d=(0,p.Uk)("或"),g=(0,p._)("code",null,"可編輯",-1),h=(0,p.Uk)("。我們跳到 46 行"),v=(0,p.uE)('<div class="language-pug ext-pug line-numbers-mode"><pre class="language-pug"><code><span class="token tag">info<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">template</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&#39;SingleTable&#39;</span></span><span class="token punctuation">)</span></span></span>\n  <span class="token tag">prop<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">title</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&#39;部門&#39;</span> systemName<span class="token operator">=</span><span class="token string">&#39;使用者管理系統&#39;</span> infoId<span class="token operator">=</span><span class="token string">&#39;xxTb05i20496&#39;</span> module<span class="token operator">=</span><span class="token string">&#39;xx/i20496&#39;</span> resource<span class="token operator">=</span><span class="token string">&#39;xx05i20496&#39;</span> key<span class="token operator">=</span><span class="token string">&#39;depNo&#39;</span></span><span class="token punctuation">)</span></span></span>\n  <span class="token tag">vos</span>\n    <span class="token tag">vo<span class="token attr-id">#xx05i20496</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">dao</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&#39;xxTb05i20496&#39;</span></span><span class="token punctuation">)</span></span></span> <span class="token plain-text">tb05i20496</span>\n  <span class="token tag">query<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">vo</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&#39;xx05i20496&#39;</span></span><span class="token punctuation">)</span></span></span> \n    <span class="token tag">field<span class="token attr-class">.compId</span></span> \n    <span class="token tag">field<span class="token attr-class">.orgType</span></span> \n    <span class="token tag">field<span class="token attr-class">.depNo</span></span> \n  <span class="token tag">drawer-layout</span>\n    <span class="token tag">grid<span class="token attr-id">#grid1</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">vo</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&#39;xx05i20496&#39;</span> max<span class="token operator">-</span>height<span class="token operator">=</span><span class="token string">&#39;650&#39;</span></span><span class="token punctuation">)</span></span></span>\n      <span class="token tag">fields</span> \n        <span class="token tag">field<span class="token attr-class">.compId</span></span> \n        <span class="token tag">field<span class="token attr-class">.orgType</span></span> \n        <span class="token tag">field<span class="token attr-class">.depNo</span></span> \n        <span class="token tag">field<span class="token attr-class">.depName</span></span> \n        <span class="token tag">field<span class="token attr-class">.status</span></span> \n      <span class="token tag">toolbar</span>\n        <span class="token tag">btn<span class="token attr-id">#batch</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">icon</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&#39;batch&#39;</span></span><span class="token punctuation">)</span></span></span> <span class="token plain-text">多筆編輯</span>\n        <span class="token tag">btn<span class="token attr-id">#create</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">icon</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&#39;plus&#39;</span></span><span class="token punctuation">)</span></span></span> <span class="token plain-text">新增</span>\n      <span class="token tag">operate</span>\n        <span class="token tag">btn<span class="token attr-id">#update</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">icon</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&#39;edit&#39;</span> submit<span class="token operator">-</span>text<span class="token operator">=</span><span class="token string">&#39;儲存&#39;</span> onrow<span class="token operator">=</span><span class="token string">&#39;true&#39;</span> </span><span class="token punctuation">)</span></span></span> <span class="token plain-text">編輯</span>\n        <span class="token tag">btn<span class="token attr-id">#copy</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">icon</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&#39;document-copy&#39;</span> submit<span class="token operator">-</span>text<span class="token operator">=</span><span class="token string">&#39;複製並新增&#39;</span></span><span class="token punctuation">)</span></span></span> <span class="token plain-text">複製</span>\n        <span class="token tag">btn<span class="token attr-id">#delete</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">icon</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&#39;delete&#39;</span></span><span class="token punctuation">)</span></span></span> <span class="token plain-text">刪除</span>\n    <span class="token tag">form<span class="token attr-id">#form1</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">vo</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&#39;xx05i20496&#39;</span></span><span class="token punctuation">)</span></span></span> \n      <span class="token tag">row</span> \n        <span class="token tag">field<span class="token attr-class">.compId</span></span>\n        <span class="token tag">field<span class="token attr-class">.orgType</span></span>\n      <span class="token tag">row</span> \n        <span class="token tag">field<span class="token attr-class">.depNo</span></span>\n        <span class="token tag">field<span class="token attr-class">.depName</span></span>\n      <span class="token tag">row</span> \n        <span class="token tag">field<span class="token attr-class">.status</span></span>\n        <span class="token tag">field<span class="token attr-class">.isFromDU</span></span>\n      <span class="token tag">row</span> \n        <span class="token tag">field<span class="token attr-class">.creEmpl</span></span>\n        <span class="token tag">field<span class="token attr-class">.creDate</span></span>\n      <span class="token tag">row</span> \n        <span class="token tag">field<span class="token attr-class">.creTime</span></span>\n        <span class="token tag">field<span class="token attr-class">.updEmpl</span></span>\n      <span class="token tag">row</span> \n        <span class="token tag">field<span class="token attr-class">.updDate</span></span>\n        <span class="token tag">field<span class="token attr-class">.updTime</span></span>\n\n  <span class="token tag">script</span><span class="token punctuation">.</span><span class="token multiline-script">\n    controller<span class="token punctuation">.</span>watch <span class="token operator">=</span> <span class="token punctuation">{</span> \n        </span><span class="token comment">// &#39;vo.xx05i20496.compId&#39;(val) {\n            // if (val === &#39;test&#39;) {\n            //     controller.vo.proj.updateDate = &#39;123456789&#39;;\n            //     controller.ui.btn.update = false\n            // }</span>\n        <span class="token comment">// }, </span>\n        <span class="token comment">// &#39;vo.xx05i20496.orgType&#39;(val) {\n            // if (val === &#39;test&#39;) {\n            //     controller.vo.proj.updateDate = &#39;123456789&#39;;\n            //     controller.ui.btn.update = false\n            // }</span>\n        <span class="token comment">// }, </span>\n    }\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><p>改成以下寫法，<code>xx05i20496</code> 是 voId，預設抓 table name 去掉 <code>db.tb</code>。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>      &#39;vo.xx05i20496.isFromDU&#39;(val) <span class="token punctuation">{</span>\n        var readonly = (val === &#39;1&#39;)\n        var columns = controller.editColumns.xx05i20496\n        columns.forEach(col=<span class="token punctuation">&gt;</span><span class="token punctuation">{</span>\n          if (col.value<span class="token tag">!==&#39;isFromDU&#39;)</span> <span class="token punctuation">{</span>\n            col.readonly = readonly;\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>)\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="https://i.imgur.com/CU3MT4b.png" alt="Alt text" title="Optional title"></p><h2 id="後端防呆" tabindex="-1"><a class="header-anchor" href="#後端防呆" aria-hidden="true">#</a> 後端防呆</h2><p>有時難免需要有專屬的防呆邏輯，這時打開後台的 Rest Controller : xxTb05i20496Rest.java (<em>i20496換掉自己工號</em>)，這支是 spring boot 的 controller 程式，細節容後再補充。<br> 請在此覆寫父類的 <code>onCreateXx05i20496</code> 方法，此方法在資料存入DB之前會被呼叫，任何的商業邏輯都可在這裡實作，如同下面檢查部門別必須與自己所屬部門相同。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token annotation punctuation">@Slf4j</span>\n<span class="token annotation punctuation">@RequiredArgsConstructor</span>\n<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;xx/i20496/tb05i20496&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> xxTb05i20496Rest <span class="token keyword">extends</span> xxTb05i20496RestBase <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreateXx05i20496</span><span class="token punctuation">(</span>xxTb05i20496Req req<span class="token punctuation">,</span> xxTb05i20496Resp resp<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">final</span> <span class="token class-name">String</span> myDeptNo <span class="token operator">=</span> dsUserSession<span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDepNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">final</span> xxTb05i20496VO dept <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">xx05i20496</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>dept<span class="token punctuation">.</span><span class="token function">getDepNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> myDeptNo<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token function">deInputDataException</span><span class="token punctuation">(</span><span class="token string">&quot;不可建立非自己部門的資料&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">protected</span> xxTb05i20496Resp <span class="token function">uiControl</span><span class="token punctuation">(</span>xxTb05i20496Resp resp<span class="token punctuation">,</span> <span class="token class-name">String</span> action <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> resp <span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>存檔編譯後，效果如下圖:</p><p><img src="https://i.imgur.com/FS5QYil.png" alt="Alt text" title="Optional title"></p><p><strong>客製程式不會被覆蓋</strong></p><p>EZoCode 已有考慮客製的需求，所以這支程式 xxTb05i20496Rest.java 在下次 codegen 時並不會覆蓋。但注意其所繼承的父類別 此例的 <em>xxTb05i20496RestBase</em> 每次重 gen 程式都會被蓋掉，所以不要在父類別中做任何修改。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Base結尾的程式為 EZoCode 所寫，請不要修改</p></div><p><strong>其他介入點</strong></p><p>除了此案例中的「新增」前的檢查，各位也可自行鑽到父類別中看到其他的介入點，包括:</p><ul><li>onCreateXx05i20496</li><li>onUpdateteXx05i20496</li><li>onDeleteXx05i20496</li></ul><h2 id="後端控制前端" tabindex="-1"><a class="header-anchor" href="#後端控制前端" aria-hidden="true">#</a> 後端控制前端</h2><p>以下案例，是當資料來自人事 「isFromDU=&quot;1&quot;」，則把 【修改】 按鈕 disabled。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">protected</span> xxTb05i20496Resp <span class="token function">uiControl</span><span class="token punctuation">(</span>xxTb05i20496Resp resp<span class="token punctuation">,</span> <span class="token class-name">String</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">final</span> xxTb05i20496VO vo <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">xx05i20496</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>vo <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">final</span> <span class="token keyword">boolean</span> showCompId <span class="token operator">=</span> <span class="token operator">!</span>vo<span class="token punctuation">.</span><span class="token function">getIsFromDU</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            resp<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>xx05i20496<span class="token punctuation">.</span><span class="token function">compId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span>showCompId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> resp<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>與人事同步=<code>是</code>，公司別欄位被隱藏。</p><p><img src="https://i.imgur.com/1LevH01.png" alt="Alt text" title="Optional title"></p><p>與人事同步=<code>否</code>，公司別欄位被顯示。</p><p><img src="https://i.imgur.com/idrbmRy.png" alt="Alt text" title="Optional title"></p><p>綜觀目前功能，我們無論在前端、或後端，皆可依需求自由控制前端 UI 狀態, 大家在後台也不必死背各前端元件的id，IDE 工具自動列給你前端有哪些欄位。</p><p><img src="https://i.imgur.com/zv4YFn4.png" alt="Alt text" title="Optional title"></p><p>以及你可控制的屬性(按需擴充)，你已經不必管這個欄位到底是: 文字輸入框、下拉選單、或 radio box、日期欄位、提示輸入欄位...whatever，你只要關心是哪個欄位就好。</p><p><img src="https://i.imgur.com/B8pNIiB.png" alt="Alt text" title="Optional title"></p>',26),x={},y=(0,a(744).Z)(x,[["render",function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("p",null,[e,(0,p._)("a",c,[o,(0,p.Wm)(a)]),l]),i,(0,p._)("p",null,[u,(0,p._)("a",r,[k,(0,p.Wm)(a)]),b,m,d,g,h]),v],64)}]])},744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);